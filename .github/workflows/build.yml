name: "Build"
on:
  - push
  - pull_request
jobs:
  check:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: yarn install --check-cache
        working-directory: frontend
  build-backend:
    name: "Build Backend Application"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "liberica"
      - run: ./gradlew check distTar
      - uses: actions/upload-artifact@v4
        with:
          name: "Backend Application"
          path: "komok-app/build/distributions/komok-app.tar"
          retention-days: 1
  build-frontend:
    name: "Build Frontend Application"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - working-directory: frontend
        run: yarn install
      - working-directory: frontend
        run: yarn run build
      - uses: actions/upload-artifact@v4
        with:
          name: "Frontend Application"
          path: "frontend/dist/"
          retention-days: 1
  build-and-push-backend-image:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs:
      - build-backend
      - build-frontend
    steps:
      - name: "Checkout"
        uses: actions/checkout@v5
      - uses: actions/download-artifact@v5
        with:
          name: "Backend Application"
          path: "komok-app/build/distributions/"
      - name: "Untar files"
        run: mkdir -p komok-app/build/distributions && tar -xvf komok-app/build/distributions/komok-app.tar -C $_
      - uses: actions/download-artifact@v5
        with:
          name: "Frontend Application"
          path: "frontend/dist/"
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v3
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3
      - name: "Login to GHCR"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password:  ${{ secrets.GITHUB_TOKEN }}
      - name: "Build and push"
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: |
            ghcr.io/heapy/komok:main
            ghcr.io/heapy/komok:b${{ github.run_number }}
