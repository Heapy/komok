[versions]
binary-compatibility-validator = "0.17.0"
bouncycastle = "1.80"
junit = "5.12.2"
junit-platform = "1.12.2"
komok = "1.0.12"
kotlin = "2.1.20"
kotlinpoet = "2.1.0"
kotlinx-coroutines = "1.10.2"
kotlinx-html = "0.12.0"
kotlinx-serialization = "1.8.1"
ksp = "2.1.20-2.0.0"
ktor = "3.1.2"
logback = "1.5.18"
micrometer = "1.14.6"
mockk = "1.14.0"
mongo = "5.4.0"
netty = "4.2.0.Final"
slf4j = "2.0.17"

[libraries]
bouncycastle-bcpkix = { module = "org.bouncycastle:bcpkix-jdk18on", version.ref = "bouncycastle" }

junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junit-platform" }

komok-tech-di = { module = "io.heapy.komok:komok-tech-di", version.ref = "komok" }
komok-tech-di-lib = { module = "io.heapy.komok:komok-tech-di-lib", version.ref = "komok" }

kotlin-poet = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }

kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }

kotlinx-html = { module = "org.jetbrains.kotlinx:kotlinx-html", version.ref = "kotlinx-html" }

kotlinx-serialization-hocon = { module = "org.jetbrains.kotlinx:kotlinx-serialization-hocon", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }

ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-cio = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
ktor-server-content-negotiation = { group = "io.ktor", name = "ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { group = "io.ktor", name = "ktor-server-core", version.ref = "ktor" }
ktor-server-cio = { group = "io.ktor", name = "ktor-server-cio", version.ref = "ktor" }
ktor-server-resources = { group = "io.ktor", name = "ktor-server-resources", version.ref = "ktor" }
ktor-server-websockets = { group = "io.ktor", name = "ktor-server-websockets", version.ref = "ktor" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-server-auth-jwt = { group = "io.ktor", name = "ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-metrics-micrometer = { group = "io.ktor", name = "ktor-server-metrics-micrometer", version.ref = "ktor" }
ktor-server-call-logging = { group = "io.ktor", name = "ktor-server-call-logging", version.ref = "ktor" }
ktor-server-default-headers = { group = "io.ktor", name = "ktor-server-default-headers", version.ref = "ktor" }
ktor-server-caching-headers = { group = "io.ktor", name = "ktor-server-caching-headers", version.ref = "ktor" }
ktor-server-status-pages = { group = "io.ktor", name = "ktor-server-status-pages", version.ref = "ktor" }
ktor-server-test-host = { group = "io.ktor", name = "ktor-server-test-host", version.ref = "ktor" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

mongo = { module = "org.mongodb:mongodb-driver-kotlin-coroutine", version.ref = "mongo" }

netty = { module = "io.netty:netty-all", version.ref = "netty" }
netty-kqueue = { module = "io.netty:netty-transport-native-kqueue", version.ref = "netty" }
netty-epoll = { module = "io.netty:netty-transport-native-epoll", version.ref = "netty" }
netty-iouring = { module = "io.netty:netty-transport-native-io_uring", version.ref = "netty" }

slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }

[plugins]
binary-compatibility-validator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "binary-compatibility-validator" }

kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
