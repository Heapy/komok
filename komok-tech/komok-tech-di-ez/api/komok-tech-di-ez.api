public abstract interface class io/heapy/komok/tech/di/ez/api/Binder {
	public abstract fun contribute (Lio/heapy/komok/tech/di/ez/api/Binding;)V
	public abstract fun dependency (Lio/heapy/komok/tech/di/ez/api/ModuleProvider;)V
	public abstract fun getSource ()Ljava/lang/String;
}

public abstract interface class io/heapy/komok/tech/di/ez/api/Binding {
	public abstract fun getKey ()Lio/heapy/komok/tech/di/ez/api/GenericKey;
	public abstract fun getSource ()Ljava/lang/String;
}

public abstract interface class io/heapy/komok/tech/di/ez/api/Context {
	public abstract fun get (Lio/heapy/komok/tech/di/ez/api/GenericKey;)Ljava/lang/Object;
}

public final class io/heapy/komok/tech/di/ez/api/CreateContextKt {
	public static final fun createContext (Lio/heapy/komok/tech/di/ez/api/ModuleProvider;)Lio/heapy/komok/tech/di/ez/api/Context;
}

public final class io/heapy/komok/tech/di/ez/api/GenericKey : io/heapy/komok/tech/di/ez/api/Key {
	public fun <init> (Lkotlin/reflect/KType;)V
	public final fun component1 ()Lkotlin/reflect/KType;
	public final fun copy (Lkotlin/reflect/KType;)Lio/heapy/komok/tech/di/ez/api/GenericKey;
	public static synthetic fun copy$default (Lio/heapy/komok/tech/di/ez/api/GenericKey;Lkotlin/reflect/KType;ILjava/lang/Object;)Lio/heapy/komok/tech/di/ez/api/GenericKey;
	public fun equals (Ljava/lang/Object;)Z
	public fun getType ()Lkotlin/reflect/KType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/heapy/komok/tech/di/ez/api/Key {
	public abstract fun getType ()Lkotlin/reflect/KType;
}

public abstract interface class io/heapy/komok/tech/di/ez/api/Module {
	public abstract fun getBindings ()Ljava/util/List;
	public abstract fun getDependencies ()Ljava/util/List;
	public abstract fun getSource ()Ljava/lang/String;
}

public abstract interface annotation class io/heapy/komok/tech/di/ez/api/ModuleDSL : java/lang/annotation/Annotation {
}

public abstract interface class io/heapy/komok/tech/di/ez/api/ModuleProvider {
	public abstract fun module ()Lio/heapy/komok/tech/di/ez/api/Module;
}

public abstract interface class io/heapy/komok/tech/di/ez/api/Provider {
	public abstract fun get ()Ljava/lang/Object;
}

public final class io/heapy/komok/tech/di/ez/api/ProviderBinding : io/heapy/komok/tech/di/ez/api/Binding {
	public fun <init> (Lio/heapy/komok/tech/di/ez/api/GenericKey;Lkotlin/reflect/KFunction;Ljava/lang/String;)V
	public final fun component1 ()Lio/heapy/komok/tech/di/ez/api/GenericKey;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Lio/heapy/komok/tech/di/ez/api/GenericKey;Lkotlin/reflect/KFunction;Ljava/lang/String;)Lio/heapy/komok/tech/di/ez/api/ProviderBinding;
	public static synthetic fun copy$default (Lio/heapy/komok/tech/di/ez/api/ProviderBinding;Lio/heapy/komok/tech/di/ez/api/GenericKey;Lkotlin/reflect/KFunction;Ljava/lang/String;ILjava/lang/Object;)Lio/heapy/komok/tech/di/ez/api/ProviderBinding;
	public fun equals (Ljava/lang/Object;)Z
	public fun getKey ()Lio/heapy/komok/tech/di/ez/api/GenericKey;
	public final fun getProvider ()Lkotlin/reflect/KFunction;
	public fun getSource ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/heapy/komok/tech/di/ez/dsl/ModuleKt {
	public static final fun module (Lkotlin/jvm/functions/Function1;)Lkotlin/properties/ReadOnlyProperty;
}

public abstract interface class io/heapy/komok/tech/di/ez/framework/EntryPoint {
	public abstract fun run (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/heapy/komok/tech/di/ez/impl/AsMethodReferenceKt {
	public static final fun asMethodReference (Ljava/lang/Object;)Lkotlin/reflect/KFunction;
}

